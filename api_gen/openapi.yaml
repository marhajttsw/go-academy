openapi: 3.0.0
info:
  title: Api
  version: 1.0.0
components:
  schemas:
    Movie:
      type: object
      required: [id, name, year]
      properties:
        id:
          type: integer
          format: uint64
          example: 10
        name:
          type: string
          example: Star Wars
          x-oapi-codegen-extra-tags:
            validate: required
        year:
          type: integer
          example: 2012
          x-oapi-codegen-extra-tags:
            validate: required,min=1888
    Character:
      type: object
      required: [movie, name, movieId]
      properties:
        characterId:
          type: integer
          format: uint64
          example: 1
        movie:
          type: string
          example: Star Wars
          x-oapi-codegen-extra-tags:
            validate: required
        name:
          type: string
          example: Yoda
          x-oapi-codegen-extra-tags:
            validate: required
        movieId:
          type: integer
          format: uint64
          example: 10
          x-oapi-codegen-extra-tags:
            validate: required
paths:
  /movies:
    get:
      summary: List movies
      responses:
        "200":
          description: A list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
    post:
      summary: Create a movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        "201":
          description: Movie created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "400":
          description: Invalid input
  /movies/{movieId}:
    parameters:
      - name: movieId
        in: path
        required: true
        description: Movie ID
        schema:
          type: integer
          format: uint64
    get:
      summary: Get a movie by ID
      responses:
        "200":
          description: The requested movie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: Movie not found
    put:
      summary: Replace a movie by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        "200":
          description: Movie updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "400":
          description: Invalid input
        "404":
          description: Movie not found
    delete:
      summary: Delete a movie by ID
      responses:
        "204":
          description: Movie deleted
        "404":
          description: Movie not found
  /movies/{movieId}/cert:
    parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: uint64
    get:
      summary: Get movie certificate
      responses:
        "200":
          description: certificate
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Not found
  /characters:
    get:
      summary: List characters
      responses:
        "200":
          description: A list of characters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Character"
    post:
      summary: Create a character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Character"
      responses:
        "201":
          description: Character created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
        "400":
          description: Invalid input
  /characters/{characterId}:
    parameters:
      - name: characterId
        in: path
        required: true
        description: Character ID
        schema:
          type: integer
          format: uint64
    get:
      summary: Get a character by ID
      responses:
        "200":
          description: The requested character
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
        "404":
          description: Character not found
    put:
      summary: Replace a character by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Character"
      responses:
        "200":
          description: Character updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
        "400":
          description: Invalid input
        "404":
          description: Character not found
    delete:
      summary: Delete a character by ID
      responses:
        "204":
          description: Character deleted
        "404":
          description: Character not found
  /characters/{characterId}/cert:
    parameters:
      - name: characterId
        in: path
        required: true
        schema:
          type: integer
          format: uint64
    get:
      summary: Get character certificate
      responses:
        "200":
          description: certificate
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Not found